@page "/bohaterowie"
@inject IBohaterowieService BohaterowieService
@inject NavigationManager NavigationManager

<PageTitle>Bohaterowie</PageTitle>
<h3>Bohaterowie</h3>

<BlazoredTypeahead SearchMethod="@SearchChampion"
					TValue="Bohaterowie"
				   TItem="Bohaterowie"
					Value="selectedChampion"
					ValueChanged="HandleSearch"
				   ValueExpression="@(() => selectedChampion)"
					placeholder="Wyszukaj...">
	<SelectedTemplate>
		@context.Nazwa 
	</SelectedTemplate>
	<ResultTemplate>
		@context.Nazwa
	</ResultTemplate>
	<NotFoundTemplate>
		Nie znaleziono postaci.
	</NotFoundTemplate>
</BlazoredTypeahead>

<table class="table">
	<thead>
		<tr>
			<th>Ikona</th>
			<th>Nazwa</th>
			<th>Tytuł</th>
			<th>Klasa</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var champion in BohaterowieService.Champions)
		{
			<tr>
				<img src="@champion.Ikona" width="120px" height="120px" alt="@champion.Nazwa" />
				<td>@champion.Nazwa</td>
				<td>@champion.Tytuł</td>
				<td>@champion.Klasa</td>
				<td>
					<button class="btn btn-primary" @onclick="(() => ShowChampion(champion.Nazwa))"><i class="oi oi-info"></i></button>
				</td>
				<td>
					<button class="btn btn-primary" @onclick="(() => ShowEditChampion(champion.Nazwa))"><i class="oi oi-pencil"></i></button>
				</td>
			</tr>
		}
	</tbody>
</table>

@code
{
	private Bohaterowie selectedChampion;

	protected override async Task OnInitializedAsync()
	{
		await BohaterowieService.GetChampions();
	}

	private void HandleSearch(Bohaterowie champion)
	{
		if (champion == null) return;
		selectedChampion = champion;
		NavigationManager.NavigateTo($"bohaterowie/{selectedChampion.Nazwa}");
	}

	private async Task<IEnumerable<Bohaterowie>> SearchChampion(string searchText)
	{
		await BohaterowieService.SearchChampion(searchText);
		return BohaterowieService.Champions;
	}

	void ShowChampion(string Name)
	{
		NavigationManager.NavigateTo($"bohaterowie/{Name}");
	}

	void ShowEditChampion(string Name)
	{
		NavigationManager.NavigateTo($"bohaterowie/edit/{Name}");
	}

}