@page "/druzyny/edit/{id}"
@page "/druzyny/edit"

@inject IDruzynyService DruzynyService

@if (id == null)
{
	<PageTitle>Dodaj</PageTitle>
	<h3>Dodaj drużynę</h3>
}
else
{
	<PageTitle>Edytuj</PageTitle>
	<h3>Edytuj @team.Nazwa</h3>
}

<EditForm Model="team" OnValidSubmit="HandleValidSubmit">
	<div>
		<label for="iddruzyny">ID</label>
		<InputText id="iddruzyny" @bind-Value="team.IdDruzyny" class="form-control"></InputText>
	</div>
	<div>
		<label for="nazwa">Nazwa</label>
		<InputText id="nazwa" @bind-Value="team.Nazwa" class="form-control"></InputText>
	</div>
	<div>
		<label for="opis">Opis</label>
		<InputTextArea id="opis" @bind-Value="team.Opis" class="form-control"></InputTextArea>
	</div>
	<div>
		<label for="liga">Liga</label>
		<InputText id="liga" @bind-Value="team.Liga" class="form-control"></InputText>
	</div>
	<div>
		<label for="logo">Logo</label>
		<InputText id="logo" @bind-Value="team.Logo" class="form-control"></InputText>
	</div>
	<div>
		<label for="zdjeciezawodnikow">Zdjęcie Zawodników</label>
		<InputText id="zdjeciezawodnikow" @bind-Value="team.ZdjecieZawodnikow" class="form-control"></InputText>
	</div>
	<button type="submit" class="btn btn-primary" @onclick="HandleValidSubmit">@btnText</button>
	<button type="button" class="btn btn-danger" @onclick="DeleteTeam">Usuń drużynę</button>
</EditForm>

@code
{
	string btnText = string.Empty;

	[Parameter]
	public string? id { get; set; }

	Druzyny team = new Druzyny();

	protected override async Task OnInitializedAsync()
	{
		btnText = id == null ? "Zapisz nową drużynę" : "Aktualizuj drużynę";

		await DruzynyService.GetTeams();
	}

	protected override async Task OnParametersSetAsync()
	{
		if (!String.IsNullOrEmpty(id))
		{
			team = await DruzynyService.GetSingleTeam(id);
		}
	}

	async Task HandleValidSubmit()
	{
		if (id == null)
		{
			await DruzynyService.CreateTeam(team);
		}
		else
		{
			await DruzynyService.UpdateTeam(team);
		}

	}

	async Task DeleteTeam()
	{
		await DruzynyService.DeleteTeam(team.IdDruzyny);
	}
}
