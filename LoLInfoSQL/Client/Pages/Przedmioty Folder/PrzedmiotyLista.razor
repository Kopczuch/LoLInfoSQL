@page "/przedmioty"
@inject IPrzedmiotyService PrzedmiotyService
@inject NavigationManager NavigationManager

<PageTitle>Przedmioty</PageTitle>
<h3>Przedmioty</h3>

<BlazoredTypeahead SearchMethod="@SearchItem"
					TValue="Przedmioty"
					TItem="Przedmioty"
					Value="selectedItem"
					ValueChanged="HandleSearch"
				   ValueExpression="@(() => selectedItem)"
					placeholder="Wyszukaj...">
	<SelectedTemplate>
		@context.Nazwa 
	</SelectedTemplate>
	<ResultTemplate>
		@context.Nazwa
	</ResultTemplate>
	<NotFoundTemplate>
		Nie znaleziono przedmiotu.
	</NotFoundTemplate>
</BlazoredTypeahead>

<table class="table">
	<thead>
		<tr>
			<th>Ikona</th>
			<th>Nazwa</th>
			<th>Cena</th>
			<th>Wartość sprzedaży</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in PrzedmiotyService.Items)
		{
			<tr>
				<img src="@item.Ikona" width="60px" height="60px" alt="@item.Nazwa" />
				<td width="250px">@item.Nazwa</td>
				<td width="250px">@item.Cena</td>
				<td>@item.WartoscSprzedazy</td>
				<td>
					<button class="btn btn-primary" @onclick="(() => ShowItem(item.Nazwa))"><i class="oi oi-info"></i></button>
				</td>
				<td>
					<button class="btn btn-primary" @onclick="(() => ShowEditItem(item.Nazwa))"><i class="oi oi-pencil"></i></button>
				</td>
			</tr>
		}
	</tbody>
</table>


@code
{
	private Przedmioty selectedItem;

	protected override async Task OnInitializedAsync()
	{
		await PrzedmiotyService.GetItems();
	}

	private void HandleSearch(Przedmioty item)
	{
		if (item == null) return;
		selectedItem = item;
		NavigationManager.NavigateTo($"przedmioty/{selectedItem.Nazwa}");
	}

	private async Task<IEnumerable<Przedmioty>> SearchItem(string searchText)
	{
		await PrzedmiotyService.SearchItem(searchText);
		return PrzedmiotyService.Items;
	}

	void ShowItem(string Name)
	{
		NavigationManager.NavigateTo($"przedmioty/{Name}");
	}

	void ShowEditItem(string Name)
	{
		NavigationManager.NavigateTo($"przedmioty/edit/{Name}");
	}
}
